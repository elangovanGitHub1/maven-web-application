pipeline {

agent{
label 'nodes'
}

tools{
//Global Tool Configuration
maven 'maven3.8.6'
}

stages {

//Get the Source Code
stage ('CheckOutCode'){
steps {
slackNotifications('STARTED')
git branch: 'development', credentialsId: 'd0949540-28e0-4b72-94fe-6925f6927dd1', url: 'https://github.com/elangovanGitHub1/maven-web-application.git'
}
}

//Build
stage ('Build'){
steps {
sh "mvn clean package"
}
}

//Execute SonarQube Report
stage ('ExecuteSonarQubeReport'){
steps {
sh "mvn sonar:sonar"
}
}

//Upload Artifacts into Nexus Server
stage ('UploadArtifactsIntoNexus'){
steps {
sh "mvn deploy"
}
}

//Deploy App into Tomcat Server
stage ('DeployAppIntoTomcatServer'){
steps {
sshagent(['c026add3-3c60-4239-9bca-5c3a572dca91']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.12.120:/opt/apache-tomcat-9.0.65/webapps/"
}
}
}

}

post {
  aborted {
slackNotifications(currentBuild.result)
  }
  success {
slackNotifications(currentBuild.result)
  }
  failure {
slackNotifications(currentBuild.result) 
  }
}

}

//Code Snippet for sending Slack Notifications.

def slackNotifications(String buildStatus = 'STARTED'){
//build status of null means successful
buildStatus =  buildStatus ?: 'SUCCESS'
//buildStatus = buildStatus ? "SUCCESS":"FAILURE"

//Default values
def colorName = 'RED'
def colorCode = '#FF0000'
def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
def summary = "${subject} (${env.BUILD_URL})"

//Override default values based on build status
if (buildStatus == 'STARTED'){
colorName = 'ORANGE'
colorCode = '#FFA500'
} else if (buildStatus == 'SUCCESS'){
colorName = 'GREEN'
colorCode = '#00FF00'
} else {
colorName = 'RED'
colorCode = '#FF0000'
}

//Send notifications
//slackSend (color: colorCode, message: summary)
slackSend (color: colorCode, message: summary, channel: "#walmart")
}

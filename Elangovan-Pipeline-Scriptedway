node{

try{

slackNotifications('STARTED')
def mavenHome = tool name: 'maven3.8.6'

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '3')), pipelineTriggers([pollSCM('* * * * *')])])

stage ('CheckOutCode'){
git branch: 'development', credentialsId: '024adbe1-b258-4f39-aa67-342d7a8e4a1b', url: 'https://github.com/elangovanGitHub1/maven-web-application.git'
}

stage ('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

stage ('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}

stage ('UploadArtifactsIntoNexus'){
sh "${mavenHome}/bin/mvn clean deploy"
}

stage ('DeployAppIntoTomcatServer'){
sshagent(['c026add3-3c60-4239-9bca-5c3a572dca91']){
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.12.120:/opt/apache-tomcat-9.0.65/webapps/"
}
}

}//try closing

catch(e){
currentBuild.result="FAILURE"
throw e
}//catch closing

finally{
slackNotifications(currentBuild.result)
}

}//node closing

//Code Snippet for Sending Slack Notifications

def slackNotifications(String buildStatus = 'STARTED'){
//build status of null means successful
buildStatus =  buildStatus ?: 'SUCCESS'
//buildStatus = buildStatus ? "SUCCESS":"FAILURE"

//Default values
def colorName = 'RED'
def colorCode = '#FF0000'
def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
def summary = "${subject} (${env.BUILD_URL})"

//Override default values based on build status
if (buildStatus == 'STARTED'){
colorName = 'ORANGE'
colorCode = '#FFA500'
} else if (buildStatus == 'SUCCESS'){
colorName = 'GREEN'
colorCode = '#00FF00'
} else{
colorName = 'RED'
colorCode = '#FF0000'
}

//Send notifications
//slackSend (color: colorCode, message: summary)
slackSend (color: colorCode, message: summary, channel: "#walmart")
}
